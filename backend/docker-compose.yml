version: '3.4'

services:
    mongo:
        hostname: 'mongodb'
        container_name: 'mongo'
        image: 'mongo:latest'
        ports:
            - 27017:27017
        environment:
            - MONGO_INITDB_DATABASE
            - MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD
            - MONGO_USERNAME
            - MONGO_PASSWORD
            - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        volumes:
            - mongodb_data_container:/data/db
            - $PWD/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
        healthcheck:
            test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
            interval: 10s
            start_period: 30s
        command: ["--replSet", "replicaSet001", "--bind_ip_all"] # Start as Replica set to be able to use transactions

    redis:
        container_name: 'redis'
        image: 'redis:alpine'
        ports:
            - '6379:6379'
        environment:
             - REDIS_SECRET
        command: redis-server --requirepass ${REDIS_SECRET}

volumes:
    mongodb_data_container:
            
