version: '3.4'

services:
    mongo:
        container_name: mongo
        hostname: mongo
        image: mongo:latest
        expose:
            - 27017
        ports:
            - 27017:27017
        environment:
            - MONGO_INITDB_DATABASE
            - MONGO_INITDB_ROOT_USERNAME
            - MONGO_INITDB_ROOT_PASSWORD
            - MONGO_USERNAME
            - MONGO_PASSWORD
        volumes:
            - mongo_storage:/data/db
            - $PWD/.docker/mongo/replica.key:/data/replica.key.copy
            - $PWD/.docker/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
            
        entrypoint:
            - bash
            - -c
            - |
                cp /data/replica.key.copy /data/replica.key
                chmod 400 /data/replica.key
                chown 999:999 /data/replica.key
                exec docker-entrypoint.sh $$@     
        command: mongod --bind_ip_all --replSet replicaSet --keyFile /data/replica.key
    
    postgres:
        hostname: postgres 
        container_name: postgres
        image: postgres:latest
        restart: always
        environment:
            - POSTGRES_USER
            - POSTGRES_PASSWORD
            - POSTGRES_DATABASE
        ports:
            - 5432:5432
        volumes:
            - postgres_storage:/var/lib/postgresql/data
            - $PWD/.docker/postgres/postgres-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh

    redis:
        hostname: redis
        container_name: redis
        image: redis:alpine
        ports:
            - 6379:6379
        environment:
            - REDIS_SECRET
        command: redis-server --requirepass ${REDIS_SECRET}
volumes:
    mongo_storage:
    postgres_storage:
            
